# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.pnpm-debug.log*

# Diagnostic reports (https://nodejs.org/api/report.html)
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# Snowpack dependency directory (https://snowpack.dev/)
web_modules/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional stylelint cache
.stylelintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variable files
.env
.env.development.local
.env.test.local
.env.production.local
.env.local

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next
out

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
# Comment in the public line in if your project uses Gatsby and not Next.js
# https://nextjs.org/blog/next-9-1#public-directory-support
# public

# vuepress build output
.vuepress/dist

# vuepress v2.x temp and cache directory
.temp
.cache

# Docusaurus cache and generated files
.docusaurus

# Serverless directories
.serverless/

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# TernJS port file
.tern-port

# Stores VSCode versions used for testing VSCode extensions
.vscode-test

# yarn v2
.yarn/cache
.yarn/unplugged
.yarn/build-state.yml
.yarn/install-state.gz
.pnp.*
node_modules


# Created by https://www.gitignore.io/api/rust
# Edit at https://www.gitignore.io/?templates=rust

# Ignore all files ending in .secret
*.secret

### Rust ###
# Generated by Cargo
# will have compiled files and executables
**/target/

# We set CARGO_HOME to this local directory to minimize interaction
# with the environment outside nix
rs/.cargo-home

# The following is commented out since we need to guarantee all engineers and CI
# are using the same crates.
# # Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# # More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
# **/Cargo.lock

# These are backup files generated by rustfmt
**/*.rs.bk

# DFX (https://github.com/dfinity/sdk) state files
**/.dfx/

# The configuration file that bazel generates for rust-analyzer.
rust-project.json

# These are files generated by proptest
**/*.proptest-regressions
**/proptest-regressions

# End of https://www.gitignore.io/api/rust

### ASCIIDOC ###

/docs/**/*.png
/docs/**/*.svg
!/docs/assets/*.png
!/docs/assets/*.svg
/docs/**/*.html
/docs/**/.asciidoctor

README.html

### Working files ###
,*
*~
*.bak
tarpaulin-report.html
*.iml
*.swp
*.swo
.envrc

### Haskell related ###

dist-newstyle

**/.stack-work

### Rust tags created by rusty-tags
**/rusty-tags.vi
**/rusty-tags.emacs

### Python litter
**/__pycache__/
**/dist/*.tar.gz
**/*whl


# JUnit files
test_report.xml

# IC-OS disk image files
*-os.iso
*os.img
disk.img
*-img.tar.gz
*-img.tar.zst
dev-root-ca.crt

# IC-OS binaries
cpp/**/infogetty
cpp/**/infogetty.o
cpp/**/network_info.o
cpp/**/prestorecon
cpp/**/prestorecon.o

# Various build artifacts
artifacts
**/build
**/build-tmp
**/build-out
**/boot/version.txt
**/bin/canister_sandbox
**/bin/ic-btc-adapter
**/bin/ic-https-outcalls-adapter
**/bin/ic-consensus-pool-util
**/bin/ic-crypto-csp
**/bin/ic-regedit
**/bin/orchestrator
**/bin/replica
**/bin/state-tool
**/bin/vsock_agent
**/bin/sandbox_launcher
**/bin/boundary-node-prober
**/bin/ic-balance-exporter

# Boundary node prober binary
boundary-node-prober

# Scalability test results
scalability/results/
*Pipfile*

# Bazel outdir dirs
/bazel-*
bazel-build-log.json
bazel-bep.pb
bazel-bep.txt
bazel-timestamp.txt
user.bazelrc

# Visual Studio Code
.vscode

# Intellij
.idea
.clwb

# OS X
.DS_Store

# Bind-mounts to devcontainer
.cache
.rustup
.bash_history
.zcompdump*
.zsh*
.npm
.ssh
.aws
.viminfo
.local
.config

test_tmpdir/**

# Bare metal deployment secrets files
zh2-dll01.csv
